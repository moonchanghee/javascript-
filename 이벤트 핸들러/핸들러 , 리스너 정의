https://m.blog.naver.com/PostView.nhn?blogId=azanghs&logNo=220364761896&proxyReferer=https%3A%2F%2Fwww.google.co.kr%2F
세가지 정의
1. 어느요소에서 발생했고
2. 어떤 이벤트를
3. 어느 이벤트 핸들러/이벤트 리스너에 연관시킬 것인가

클라이언트측 javascript에서는 이런한 이벤트와의 연관성 부여를 실시하기 위하여 몇가지 방법제공
1. 태그내의 속성으로 선언
2. 요소 객체의 프로퍼티로 선언
3. addEventListener 메소드 사용 선언



# 태그내의 속성으로 선언하기(이벤트 핸들러)
+ js

function btn_click(){
    window.alert("버튼이 클릭되었다");
}

+ html 

<input type="button" value="다이얼로그 표시" onclick="btn_click()">

# 요소 객체의 프로퍼티로 선언하기(이벤트 핸들러)


+ js 

window.onload = function(){
    document.getElementById('btn').onclick = function(){
        window.alert('버튼이 클릭되었다')
    }
}

+ html

<input type="button" id= "btn"value="다이얼로그 표시"


onxxxx 프로퍼티에 의한 이벤트 핸들러의 문제점은 동일한 요소/동일한 이벤트에 여러 이벤트 핸들러를 연결시킬수 없다.
그래서 등장한 것이 이벤트 리스너이다.(동일 요소의 동일한 이벤트에 관해 복수로 연관시킬 수 있는 이벤트 핸들러 이다.)

+ html 

<input id = "btn" type="button" value="다이얼로그 표시" onclick="btn_click()">

+ js 

//페이지 로드 시 실행되는 이벤트 리스너 등록
document.getElementListener('DOMContentLoaded' , function(){

//버튼(btn) 클릭 시 실행되는 이벤트 리스너를 등록
document.getElementById('btn').addEventListener('click' , function(){
window.alert('버튼이 클릭되었다.');
},false);
},false);



})





+ onload 이벤트 핸들러 => 콘텐츠 본체와 모든 이미지가 로드된 후에 실행
+ DOMContentLoaded 이벤트 리스너 => 콘텐츠 본체가 로드된 후에 실행(=이미지의 로드를 기다리지 않는다)
대개의 처리는 이미지의 로드를 기다릴 필요가 없으므로 DOMContentLoaded 이벤트 리스너를 이용하여 스크립트의 시작 타이밍을 앞당길 수 있다
이미지와 관련된 처리등 특별한 사유가 없는 한 페이지의 초기화 처리는 DOMCcontent



 + onload - 문서내의 모든 리소스(이미지,스크립트)의 다운로드가 끝난 후에 실행된다
 + DomcontentLoaded - dom에 해당하는 모든 html 태그가 레디 상태가 되면 이벤트가 발생된다. (이미지다운시간을 기다리지 않는다)

325p   
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

클라이언트 측 javascript에서 해당 이벤트에 따라 실행하는 코드를 작성하는 것이 특징 이 프로그래밍 모델을 이벤트 드리븐 모델(구동 모델)이라 한다.
이벤트 드리븐 모델 : 페이지 안에서 발생한 다양한 사건(이벤트)에 따라 대응하는 처리(이벤트 핸들러)를 호줄하여 실행하는 모델

이벤트 핸들러 이벤트에 대응해 그처리 내용을 정의하는 코드의 덩어리(함수)를 이벤트 핸들러라고 한다. 

이벤트 리스너 대표적으로 요소객체.addEventListener()메소드를 사용 해서 첫번째 요소에 이벤트를 넣고 그해당 이벤트가 발생할때 동작하는 
함수를 두번째 요소에 넣어준다(이벤트 핸들러)// 동일 요소의 동일 이벤트에 관해 복수로 연관시킬수 있는 이벤트 핸들러



