function sleep(callback){
    setTimeout(function(){
        callback();

    },1000);
}

sleep(function(){
    console.log("A");
    sleep(function(){
        console.log("B");
        sleep(function(){
            console.log("C");
    
   
        });
    });
});

콜백함수를 여러개 중첩하면 작업 내용을 이해하기가 어려워 진다. 또한 예외처리가 어렵다.  이를 가리켜 콜백지옥이라고 부른다.
콜백 지옥문제를 해결하기위해 promise를 사용한다//비동기 처리를 간결하게 작성할수있게해줌

var promise = new Promise(function(resolve,reject){....});

resolve: 함수 안의 처리가 끝났을 때 호출해야 하는 콜백함수:resolve 함수에는 어떠한 값도 인수로 넘길 수있다 이값은 다음 처리를 실행하는 함수에 전달
reject : 함수 안의 처리가 실패했을 때 호출해야 하는 콜백 함수 : reject 함수에는 어떠한 값도 인수로 넘길수 있다. 대부분의 경우 오류 메시지 문자열을 
         인수로 사용한다.
    
    

    
    
    
